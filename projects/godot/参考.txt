using Godot;
using System;
using System.Threading.Tasks;

public partial class BattleField : Node2D
{
	private CharacterData character_data;
    // Tween tween = new Tween();
    public override void _Ready()
	{
        character_data = GetNode<CharacterData>("/root/CharacterData");
        // AddChild(tween);

        // need read gobal settings
        //TextureRect textureRect;
        //textureRect = GetNode<TextureRect>("BackGround");
        //textureRect.Texture = (Texture2D)ResourceLoader.Load<Texture>("res://Sprites/BattleField/bamboo_bridge.png");
    }

    public override void _Process(double delta)
	{

	}

    public void InitCharacter()
    {
        Vector2 middle_pos = new Vector2(400, 600);
        for (int i = 0; i < character_data.AllyArray.Count; i++)
        {
            CharacterInfo idata = character_data.AllyArray[i];
            
            AnimatedSprite2D animatedSprite = new AnimatedSprite2D();
            AddChild(animatedSprite);
            SpriteFrames newSpriteFrame = (SpriteFrames)GD.Load(idata.ani_loc);
            animatedSprite.Set("sprite_frames", newSpriteFrame);
            animatedSprite.Scale = new Vector2(idata.ani_scale, idata.ani_scale);
            animatedSprite.Play("Idle");
            character_data.AllyArray[i].node = animatedSprite;

            character_data.AllyArray[i].node_pos = new Vector2(400 + 200 * ((int)(character_data.AllyArray.Count / 2) - i), 500);
            animatedSprite.Position = character_data.AllyArray[i].node_pos;
        }

        for (int i = 0; i < character_data.EnemyArray.Count; i++)
        {
            CharacterInfo idata = character_data.EnemyArray[i];

            AnimatedSprite2D animatedSprite = new AnimatedSprite2D();
            AddChild(animatedSprite);
            SpriteFrames newSpriteFrame = (SpriteFrames)GD.Load(idata.ani_loc);
            animatedSprite.Set("sprite_frames", newSpriteFrame);
            animatedSprite.Scale = new Vector2(-idata.ani_scale, idata.ani_scale);
            animatedSprite.Play("Idle");
            character_data.EnemyArray[i].node = animatedSprite;

            character_data.EnemyArray[i].node_pos = new Vector2(1500 - 200 * ((int)(character_data.EnemyArray.Count / 2) - i), 500);
            animatedSprite.Position = character_data.EnemyArray[i].node_pos;
        }

    }

    public void TurnManager()
    {
        StartTurn();
        AllyTurn();
        EnemyTurn();
        EndTurn();
    }

    public void StartTurn()
    {

    }

    public void AllyTurn()
    {

    }
    public void EnemyTurn()
    {

    }

    public void EndTurn()
    {

    }

    public void GameWin()
    {

    }

    public void GameFailed()
    {

    }

    public async void CharacterAct()
    {
        AnimatedSprite2D current_character = character_data.AllyArray[0].node;
        AnimatedSprite2D target_character = character_data.EnemyArray[0].node;

        Vector2 raw_pos = current_character.Position;
        current_character.Position = target_character.Position - new Vector2(character_data.AllyArray[0].atk_range,0);

        await Task.Delay(TimeSpan.FromSeconds(1.2f));

        // current_character.Position = raw_pos;
    }

}
